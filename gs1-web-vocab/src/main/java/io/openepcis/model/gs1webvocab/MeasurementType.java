//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
//

package io.openepcis.model.gs1webvocab;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;

/**
 * Java class for MeasurementType.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>{@code
 * <simpleType name="MeasurementType">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="AbsoluteHumidity"/>
 *     <enumeration value="AbsorbedDose"/>
 *     <enumeration value="AbsorbedDoseRate"/>
 *     <enumeration value="Acceleration"/>
 *     <enumeration value="Altitude"/>
 *     <enumeration value="AmountOfSubstance"/>
 *     <enumeration value="AmountOfSubstancePerUnitVolume"/>
 *     <enumeration value="Angle"/>
 *     <enumeration value="AngularAcceleration"/>
 *     <enumeration value="AngularMomentum"/>
 *     <enumeration value="AngularVelocity"/>
 *     <enumeration value="Area"/>
 *     <enumeration value="Capacitance"/>
 *     <enumeration value="Conductance"/>
 *     <enumeration value="Conductivity"/>
 *     <enumeration value="Count"/>
 *     <enumeration value="Density"/>
 *     <enumeration value="Dimensionless"/>
 *     <enumeration value="DoseEquivalent"/>
 *     <enumeration value="DoseEquivalentRate"/>
 *     <enumeration value="DynamicViscosity"/>
 *     <enumeration value="ElectricCharge"/>
 *     <enumeration value="ElectricCurrent"/>
 *     <enumeration value="ElectricCurrentDensity"/>
 *     <enumeration value="ElectricFieldStrength"/>
 *     <enumeration value="Energy"/>
 *     <enumeration value="Exposure"/>
 *     <enumeration value="Force"/>
 *     <enumeration value="Frequency"/>
 *     <enumeration value="Illuminance"/>
 *     <enumeration value="Inductance"/>
 *     <enumeration value="Irradiance"/>
 *     <enumeration value="KinematicViscosity"/>
 *     <enumeration value="Length"/>
 *     <enumeration value="LinearMomentum"/>
 *     <enumeration value="Luminance"/>
 *     <enumeration value="LuminousFlux"/>
 *     <enumeration value="LuminousIntensity"/>
 *     <enumeration value="MagneticFlux"/>
 *     <enumeration value="MagneticFluxDensity"/>
 *     <enumeration value="MagneticVectorPotential"/>
 *     <enumeration value="Mass"/>
 *     <enumeration value="MassConcentration"/>
 *     <enumeration value="MassFlowRate"/>
 *     <enumeration value="MassPerAreaTime"/>
 *     <enumeration value="MemoryCapacity"/>
 *     <enumeration value="MolalityOfSolute"/>
 *     <enumeration value="MolarEnergy"/>
 *     <enumeration value="MolarMass"/>
 *     <enumeration value="MolarVolume"/>
 *     <enumeration value="Power"/>
 *     <enumeration value="Pressure"/>
 *     <enumeration value="RadiantFlux"/>
 *     <enumeration value="RadiantIntensity"/>
 *     <enumeration value="Radioactivity"/>
 *     <enumeration value="RelativeHumidity"/>
 *     <enumeration value="Resistance"/>
 *     <enumeration value="Resistivity"/>
 *     <enumeration value="SolidAngle"/>
 *     <enumeration value="SpecificVolume"/>
 *     <enumeration value="Speed"/>
 *     <enumeration value="SurfaceDensity"/>
 *     <enumeration value="SurfaceTension"/>
 *     <enumeration value="Temperature"/>
 *     <enumeration value="Time"/>
 *     <enumeration value="Torque"/>
 *     <enumeration value="Voltage"/>
 *     <enumeration value="Volume"/>
 *     <enumeration value="VolumeFlowRate"/>
 *     <enumeration value="VolumeFraction"/>
 *     <enumeration value="VolumetricFlux"/>
 *     <enumeration value="Wavenumber"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 */
@XmlType(name = "MeasurementType")
@XmlEnum
public enum MeasurementType {
  @XmlEnumValue("AbsoluteHumidity")
  ABSOLUTE_HUMIDITY("AbsoluteHumidity"),
  @XmlEnumValue("AbsorbedDose")
  ABSORBED_DOSE("AbsorbedDose"),
  @XmlEnumValue("AbsorbedDoseRate")
  ABSORBED_DOSE_RATE("AbsorbedDoseRate"),
  @XmlEnumValue("Acceleration")
  ACCELERATION("Acceleration"),
  @XmlEnumValue("Altitude")
  ALTITUDE("Altitude"),
  @XmlEnumValue("AmountOfSubstance")
  AMOUNT_OF_SUBSTANCE("AmountOfSubstance"),
  @XmlEnumValue("AmountOfSubstancePerUnitVolume")
  AMOUNT_OF_SUBSTANCE_PER_UNIT_VOLUME("AmountOfSubstancePerUnitVolume"),
  @XmlEnumValue("Angle")
  ANGLE("Angle"),
  @XmlEnumValue("AngularAcceleration")
  ANGULAR_ACCELERATION("AngularAcceleration"),
  @XmlEnumValue("AngularMomentum")
  ANGULAR_MOMENTUM("AngularMomentum"),
  @XmlEnumValue("AngularVelocity")
  ANGULAR_VELOCITY("AngularVelocity"),
  @XmlEnumValue("Area")
  AREA("Area"),
  @XmlEnumValue("Capacitance")
  CAPACITANCE("Capacitance"),
  @XmlEnumValue("Conductance")
  CONDUCTANCE("Conductance"),
  @XmlEnumValue("Conductivity")
  CONDUCTIVITY("Conductivity"),
  @XmlEnumValue("Count")
  COUNT("Count"),
  @XmlEnumValue("Density")
  DENSITY("Density"),
  @XmlEnumValue("Dimensionless")
  DIMENSIONLESS("Dimensionless"),
  @XmlEnumValue("DoseEquivalent")
  DOSE_EQUIVALENT("DoseEquivalent"),
  @XmlEnumValue("DoseEquivalentRate")
  DOSE_EQUIVALENT_RATE("DoseEquivalentRate"),
  @XmlEnumValue("DynamicViscosity")
  DYNAMIC_VISCOSITY("DynamicViscosity"),
  @XmlEnumValue("ElectricCharge")
  ELECTRIC_CHARGE("ElectricCharge"),
  @XmlEnumValue("ElectricCurrent")
  ELECTRIC_CURRENT("ElectricCurrent"),
  @XmlEnumValue("ElectricCurrentDensity")
  ELECTRIC_CURRENT_DENSITY("ElectricCurrentDensity"),
  @XmlEnumValue("ElectricFieldStrength")
  ELECTRIC_FIELD_STRENGTH("ElectricFieldStrength"),
  @XmlEnumValue("Energy")
  ENERGY("Energy"),
  @XmlEnumValue("Exposure")
  EXPOSURE("Exposure"),
  @XmlEnumValue("Force")
  FORCE("Force"),
  @XmlEnumValue("Frequency")
  FREQUENCY("Frequency"),
  @XmlEnumValue("Illuminance")
  ILLUMINANCE("Illuminance"),
  @XmlEnumValue("Inductance")
  INDUCTANCE("Inductance"),
  @XmlEnumValue("Irradiance")
  IRRADIANCE("Irradiance"),
  @XmlEnumValue("KinematicViscosity")
  KINEMATIC_VISCOSITY("KinematicViscosity"),
  @XmlEnumValue("Length")
  LENGTH("Length"),
  @XmlEnumValue("LinearMomentum")
  LINEAR_MOMENTUM("LinearMomentum"),
  @XmlEnumValue("Luminance")
  LUMINANCE("Luminance"),
  @XmlEnumValue("LuminousFlux")
  LUMINOUS_FLUX("LuminousFlux"),
  @XmlEnumValue("LuminousIntensity")
  LUMINOUS_INTENSITY("LuminousIntensity"),
  @XmlEnumValue("MagneticFlux")
  MAGNETIC_FLUX("MagneticFlux"),
  @XmlEnumValue("MagneticFluxDensity")
  MAGNETIC_FLUX_DENSITY("MagneticFluxDensity"),
  @XmlEnumValue("MagneticVectorPotential")
  MAGNETIC_VECTOR_POTENTIAL("MagneticVectorPotential"),
  @XmlEnumValue("Mass")
  MASS("Mass"),
  @XmlEnumValue("MassConcentration")
  MASS_CONCENTRATION("MassConcentration"),
  @XmlEnumValue("MassFlowRate")
  MASS_FLOW_RATE("MassFlowRate"),
  @XmlEnumValue("MassPerAreaTime")
  MASS_PER_AREA_TIME("MassPerAreaTime"),
  @XmlEnumValue("MemoryCapacity")
  MEMORY_CAPACITY("MemoryCapacity"),
  @XmlEnumValue("MolalityOfSolute")
  MOLALITY_OF_SOLUTE("MolalityOfSolute"),
  @XmlEnumValue("MolarEnergy")
  MOLAR_ENERGY("MolarEnergy"),
  @XmlEnumValue("MolarMass")
  MOLAR_MASS("MolarMass"),
  @XmlEnumValue("MolarVolume")
  MOLAR_VOLUME("MolarVolume"),
  @XmlEnumValue("Power")
  POWER("Power"),
  @XmlEnumValue("Pressure")
  PRESSURE("Pressure"),
  @XmlEnumValue("RadiantFlux")
  RADIANT_FLUX("RadiantFlux"),
  @XmlEnumValue("RadiantIntensity")
  RADIANT_INTENSITY("RadiantIntensity"),
  @XmlEnumValue("Radioactivity")
  RADIOACTIVITY("Radioactivity"),
  @XmlEnumValue("RelativeHumidity")
  RELATIVE_HUMIDITY("RelativeHumidity"),
  @XmlEnumValue("Resistance")
  RESISTANCE("Resistance"),
  @XmlEnumValue("Resistivity")
  RESISTIVITY("Resistivity"),
  @XmlEnumValue("SolidAngle")
  SOLID_ANGLE("SolidAngle"),
  @XmlEnumValue("SpecificVolume")
  SPECIFIC_VOLUME("SpecificVolume"),
  @XmlEnumValue("Speed")
  SPEED("Speed"),
  @XmlEnumValue("SurfaceDensity")
  SURFACE_DENSITY("SurfaceDensity"),
  @XmlEnumValue("SurfaceTension")
  SURFACE_TENSION("SurfaceTension"),
  @XmlEnumValue("Temperature")
  TEMPERATURE("Temperature"),
  @XmlEnumValue("Time")
  TIME("Time"),
  @XmlEnumValue("Torque")
  TORQUE("Torque"),
  @XmlEnumValue("Voltage")
  VOLTAGE("Voltage"),
  @XmlEnumValue("Volume")
  VOLUME("Volume"),
  @XmlEnumValue("VolumeFlowRate")
  VOLUME_FLOW_RATE("VolumeFlowRate"),
  @XmlEnumValue("VolumeFraction")
  VOLUME_FRACTION("VolumeFraction"),
  @XmlEnumValue("VolumetricFlux")
  VOLUMETRIC_FLUX("VolumetricFlux"),
  @XmlEnumValue("Wavenumber")
  WAVENUMBER("Wavenumber");
  private final String value;

  MeasurementType(String v) {
    value = v;
  }

  /**
   * Gets the value associated to the enum constant.
   *
   * @return The value linked to the enum.
   */
  public String value() {
    return value;
  }

  /**
   * Gets the enum associated to the value passed as parameter.
   *
   * @param v The value to get the enum from.
   * @return The enum which corresponds to the value, if it exists.
   * @throws IllegalArgumentException If no value matches in the enum declaration.
   */
  public static MeasurementType fromValue(String v) {
    for (MeasurementType c : MeasurementType.values()) {
      if (c.value.equals(v)) {
        return c;
      }
    }
    throw new IllegalArgumentException(v);
  }
}
