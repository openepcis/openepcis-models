//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
//

package io.openepcis.model.gs1webvocab;

import io.openepcis.model.interfaces.Beverage;
import jakarta.xml.bind.annotation.*;

import java.util.LinkedHashMap;

/**
 * Any potable liquid.
 *
 * <p>Java class for Beverage complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>{@code
 * <complexType name="Beverage">
 *   <complexContent>
 *     <extension base="{}FoodBeverageTobaccoProduct">
 *       <sequence>
 *         <element name="alcoholicBeverageSubregion" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         <element name="beverageVintage" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         <element name="isCarbonated" type="{}NonbinaryLogicCode"/>
 *         <element name="isDecaffeinated" type="{}NonbinaryLogicCode"/>
 *         <element name="isFromConcentrate" type="{}NonbinaryLogicCode"/>
 *         <element name="isVintage" type="{}NonbinaryLogicCode"/>
 *         <element name="percentageOfAlcoholByVolume" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         <element name="vintner" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(
        name = "Beverage",
        propOrder = {
                "alcoholicBeverageSubregion",
                "beverageVintage",
                "isCarbonated",
                "isDecaffeinated",
                "isFromConcentrate",
                "isVintage",
                "percentageOfAlcoholByVolume",
                "vintner"
        })
public class BeverageXMLImpl extends FoodBeverageTobaccoProductXMLImpl implements Beverage {

    @XmlElement(required = true)
    protected LinkedHashMap<String, String> alcoholicBeverageSubregion;

    @XmlElement(required = true)
    protected String beverageVintage;

    @XmlElement(required = true)
    @XmlSchemaType(name = "string")
    protected NonbinaryLogicCode isCarbonated;

    @XmlElement(required = true)
    @XmlSchemaType(name = "string")
    protected NonbinaryLogicCode isDecaffeinated;

    @XmlElement(required = true)
    @XmlSchemaType(name = "string")
    protected NonbinaryLogicCode isFromConcentrate;

    @XmlElement(required = true)
    @XmlSchemaType(name = "string")
    protected NonbinaryLogicCode isVintage;

    protected float percentageOfAlcoholByVolume;

    @XmlElement(required = true)
    protected LinkedHashMap<String, String> vintner;

    /**
     * Gets the value of the alcoholicBeverageSubregion property.
     *
     * @return possible object is {@link String }
     */
    @Override
    public LinkedHashMap<String, String> getAlcoholicBeverageSubregion() {
        if (alcoholicBeverageSubregion == null) {
            alcoholicBeverageSubregion = new LinkedHashMap<>();
        }
        return alcoholicBeverageSubregion;
    }

    /**
     * Sets the value of the alcoholicBeverageSubregion property.
     *
     * @param value allowed object is {@link String }
     */
    @Override
    public void setAlcoholicBeverageSubregion(LinkedHashMap<String, String> value) {
        this.alcoholicBeverageSubregion = value;
    }

    /**
     * Gets the value of the beverageVintage property.
     *
     * @return possible object is {@link String }
     */
    @Override
    public String getBeverageVintage() {
        return beverageVintage;
    }

    /**
     * Sets the value of the beverageVintage property.
     *
     * @param value allowed object is {@link String }
     */
    @Override
    public void setBeverageVintage(String value) {
        this.beverageVintage = value;
    }

    /**
     * Gets the value of the isCarbonated property.
     *
     * @return possible object is {@link NonbinaryLogicCode }
     */
    @Override
    public NonbinaryLogicCode getIsCarbonated() {
        return isCarbonated;
    }

    /**
     * Sets the value of the isCarbonated property.
     *
     * @param value allowed object is {@link NonbinaryLogicCode }
     */
    @Override
    public void setIsCarbonated(NonbinaryLogicCode value) {
        this.isCarbonated = value;
    }

    /**
     * Gets the value of the isDecaffeinated property.
     *
     * @return possible object is {@link NonbinaryLogicCode }
     */
    @Override
    public NonbinaryLogicCode getIsDecaffeinated() {
        return isDecaffeinated;
    }

    /**
     * Sets the value of the isDecaffeinated property.
     *
     * @param value allowed object is {@link NonbinaryLogicCode }
     */
    @Override
    public void setIsDecaffeinated(NonbinaryLogicCode value) {
        this.isDecaffeinated = value;
    }

    /**
     * Gets the value of the isFromConcentrate property.
     *
     * @return possible object is {@link NonbinaryLogicCode }
     */
    @Override
    public NonbinaryLogicCode getIsFromConcentrate() {
        return isFromConcentrate;
    }

    /**
     * Sets the value of the isFromConcentrate property.
     *
     * @param value allowed object is {@link NonbinaryLogicCode }
     */
    @Override
    public void setIsFromConcentrate(NonbinaryLogicCode value) {
        this.isFromConcentrate = value;
    }

    /**
     * Gets the value of the isVintage property.
     *
     * @return possible object is {@link NonbinaryLogicCode }
     */
    @Override
    public NonbinaryLogicCode getIsVintage() {
        return isVintage;
    }

    /**
     * Sets the value of the isVintage property.
     *
     * @param value allowed object is {@link NonbinaryLogicCode }
     */
    @Override
    public void setIsVintage(NonbinaryLogicCode value) {
        this.isVintage = value;
    }

    /**
     * Gets the value of the percentageOfAlcoholByVolume property.
     *
     * @return possible object is {@link String }
     */
    @Override
    public float getPercentageOfAlcoholByVolume() {
        return percentageOfAlcoholByVolume;
    }

    /**
     * Sets the value of the percentageOfAlcoholByVolume property.
     *
     * @param value allowed object is {@link String }
     */
    @Override
    public void setPercentageOfAlcoholByVolume(float value) {
        this.percentageOfAlcoholByVolume = value;
    }

    /**
     * Gets the value of the vintner property.
     *
     * @return possible object is {@link String }
     */
    @Override
    public LinkedHashMap<String, String> getVintner() {
        if (vintner == null) {
            vintner = new LinkedHashMap<>();
        }
        return vintner;
    }

    /**
     * Sets the value of the vintner property.
     *
     * @param value allowed object is {@link String }
     */
    @Override
    public void setVintner(LinkedHashMap<String, String> value) {
        this.vintner = value;
    }
}
