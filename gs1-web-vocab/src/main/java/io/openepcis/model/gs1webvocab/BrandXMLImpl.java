//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
//

package io.openepcis.model.gs1webvocab;

import io.openepcis.model.interfaces.Brand;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;

import java.util.LinkedHashMap;

/**
 * Information on brands and sub-brands for a product.
 *
 * <p>Java class for Brand complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>{@code
 * <complexType name="Brand">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="brandName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         <element name="subBrandName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(
        name = "Brand",
        propOrder = {"brandName", "subBrandName"})
public class BrandXMLImpl implements Brand {

    @XmlElement(required = true)
    protected LinkedHashMap<String, String> brandName;

    @XmlElement(required = true)
    protected LinkedHashMap<String, String> subBrandName;

    /**
     * Gets the value of the brandName property.
     *
     * @return possible object is {@link String }
     */
    @Override
    public LinkedHashMap<String, String> getBrandName() {
        if (brandName == null) {
            brandName = new LinkedHashMap<>();
        }
        return brandName;
    }

    /**
     * Sets the value of the brandName property.
     *
     * @param value allowed object is {@link String }
     */
    @Override
    public void setBrandName(LinkedHashMap<String, String> value) {
        this.brandName = value;
    }

    /**
     * Gets the value of the subBrandName property.
     *
     * @return possible object is {@link String }
     */
    @Override
    public LinkedHashMap<String, String> getSubBrandName() {
        if (subBrandName == null) {
            subBrandName = new LinkedHashMap<>();
        }
        return subBrandName;
    }

    /**
     * Sets the value of the subBrandName property.
     *
     * @param value allowed object is {@link String }
     */
    @Override
    public void setSubBrandName(LinkedHashMap<String, String> value) {
        this.subBrandName = value;
    }
}
